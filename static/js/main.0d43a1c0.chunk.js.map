{"version":3,"sources":["componets/TodoForm.js","componets/Todo.js","componets/TodoList.js","App.js","index.js"],"names":["TodoForm","addTodo","useState","id","task","completed","todo","setTodo","style","position","onSubmit","e","preventDefault","trim","uuidv4","display","textAlign","padding","height","marginRight","name","type","value","onChange","target","class","bottom","Todo","toggleComplete","removeTodo","marginLeft","marginTop","onClick","color","textDecoration","fontFamily","fontWeight","left","TodoList","todos","map","key","App","setTodos","useEffect","storageTodos","JSON","parse","localStorage","getItem","setItem","stringify","className","background","fontStyle","filter","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2KAkDeA,MA/Cf,YAAgC,IAAZC,EAAW,EAAXA,QAAW,EACLC,mBAAS,CAC/BC,GAAI,GACJC,KAAM,GACNC,WAAW,IAJgB,mBACtBC,EADsB,KAChBC,EADgB,KAkB7B,OACE,yBAAKC,MAAO,CAAEC,SAAU,aACtB,0BACEC,SAXN,SAAsBC,GACpBA,EAAEC,iBACEN,EAAKF,KAAKS,SACZZ,EAAQ,2BAAKK,GAAN,IAAYH,GAAIW,iBACvBP,EAAQ,2BAAKD,GAAN,IAAYF,KAAM,QAQvBI,MAAO,CACLO,QAAS,QACTC,UAAW,SACXC,QAAS,gBAGX,2BACET,MAAO,CAAEU,OAAQ,OAAQC,YAAa,QACtCC,KAAK,OACLC,KAAK,OACLC,MAAOhB,EAAKF,KACZmB,SA1BR,SAA+BZ,GAC7BJ,EAAQ,2BAAKD,GAAN,IAAYF,KAAMO,EAAEa,OAAOF,YA2B9B,4BACED,KAAK,SACLI,MAAM,yBACNjB,MAAO,CAAEC,SAAU,WAAYiB,OAAQ,QAHzC,kBCYOC,MAhDf,YAAqD,IAArCrB,EAAoC,EAApCA,KAAMsB,EAA8B,EAA9BA,eAAgBC,EAAc,EAAdA,WAQpC,OACE,yBACErB,MAAO,CACLO,QAAS,OACTe,WAAY,QACZC,UAAW,SAGb,2BAAOV,KAAK,WAAWW,QAf3B,WACEJ,EAAetB,EAAKH,OAelB,wBACEK,MAAO,CACLyB,MAAO,QACPC,eAAgB5B,EAAKD,UAAY,eAAiB,KAClDU,QAAS,QACTC,UAAW,SAEXmB,WAAY,YACZC,WAAY,OACZ3B,SAAU,WACV4B,KAAM,OACNX,OAAQ,QAGTpB,EAAKF,MAER,4BACE4B,QA9BN,WACEH,EAAWvB,EAAKH,KA8BZsB,MAAM,wBACNjB,MAAO,CACLC,SAAU,WACV4B,KAAM,OACNX,OAAQ,QANZ,YCjBSY,MAff,YAA0D,IAAtCC,EAAqC,EAArCA,MAAOX,EAA8B,EAA9BA,eAAgBC,EAAc,EAAdA,WACzC,OACE,4BACGU,EAAMC,KAAI,SAAClC,GAAD,OACT,kBAAC,EAAD,CACEmC,IAAKnC,EAAKH,GACVG,KAAMA,EACNsB,eAAgBA,EAChBC,WAAYA,SCwDPa,MAhEf,WAAgB,IAAD,EACaxC,mBAAS,IADtB,mBACNqC,EADM,KACCI,EADD,KAkCb,OA/BAC,qBAAU,WACR,IAAMC,EAAeC,KAAKC,MAAMC,aAAaC,QAFrB,0BAGpBJ,GACFF,EAASE,KAEV,IACHD,qBAAU,WACRI,aAAaE,QARW,wBAQgBJ,KAAKK,UAAUZ,MACtD,CAACA,IAwBF,yBACEa,UAAU,MACV5C,MAAO,CACL6C,WAAY,aACZnC,OAAQ,WAGV,4BAAQkC,UAAU,cAChB,wBACE5C,MAAO,CACLQ,UAAW,SACXmB,WAAY,aACZmB,UAAW,OACXrB,MAAO,YALX,aAUA,kBAAC,EAAD,CAAUhC,QAxChB,SAAiBK,GACfqC,EAAS,CAACrC,GAAF,mBAAWiC,QAwCf,kBAAC,EAAD,CACEA,MAAOA,EACPX,eAvCR,SAAwBzB,GACtBwC,EACEJ,EAAMC,KAAI,SAAClC,GACT,OAAIA,EAAKH,KAAOA,EACP,2BACFG,GADL,IAEED,WAAYC,EAAKD,YAGdC,OA+BLuB,WA1BR,SAAoB1B,GAClBwC,EAASJ,EAAMgB,QAAO,SAACjD,GAAD,OAAUA,EAAKH,KAAOA,YC/BhDqD,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.0d43a1c0.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nfunction TodoForm({ addTodo }) {\r\n  const [todo, setTodo] = useState({\r\n    id: \"\",\r\n    task: \"\",\r\n    completed: false,\r\n  });\r\n\r\n  function handleTaskInputChange(e) {\r\n    setTodo({ ...todo, task: e.target.value });\r\n  }\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    if (todo.task.trim()) {\r\n      addTodo({ ...todo, id: uuidv4() });\r\n      setTodo({ ...todo, task: \"\" });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div style={{ position: \"relative\" }}>\r\n      <form\r\n        onSubmit={handleSubmit}\r\n        style={{\r\n          display: \"block\",\r\n          textAlign: \"center\",\r\n          padding: \"3px 3px 3px\",\r\n        }}\r\n      >\r\n        <input\r\n          style={{ height: \"30px\", marginRight: \"10px\" }}\r\n          name=\"task\"\r\n          type=\"text\"\r\n          value={todo.task}\r\n          onChange={handleTaskInputChange}\r\n        />\r\n        <button\r\n          type=\"submit\"\r\n          class=\"btn btn-primary btn-sm\"\r\n          style={{ position: \"relative\", bottom: \"3px\" }}\r\n        >\r\n          Add to List\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TodoForm;\r\n","import React from \"react\";\r\n\r\nfunction Todo({ todo, toggleComplete, removeTodo }) {\r\n  function handleCheckClick() {\r\n    toggleComplete(todo.id);\r\n  }\r\n  function handleRemoveClick() {\r\n    removeTodo(todo.id);\r\n  }\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        marginLeft: \"720px\",\r\n        marginTop: \"30px\",\r\n      }}\r\n    >\r\n      <input type=\"checkbox\" onClick={handleCheckClick} />\r\n      <li\r\n        style={{\r\n          color: \"black\",\r\n          textDecoration: todo.completed ? \"line-through\" : null,\r\n          display: \"block\",\r\n          textAlign: \"center\",\r\n\r\n          fontFamily: \"san-serif\",\r\n          fontWeight: \"bold\",\r\n          position: \"relative\",\r\n          left: \"10px\",\r\n          bottom: \"6px\",\r\n        }}\r\n      >\r\n        {todo.task}\r\n      </li>\r\n      <button\r\n        onClick={handleRemoveClick}\r\n        class=\"btn btn-danger btn-sm\"\r\n        style={{\r\n          position: \"relative\",\r\n          left: \"20px\",\r\n          bottom: \"6px\",\r\n        }}\r\n      >\r\n        Delete\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Todo;\r\n","import React from \"react\";\r\nimport Todo from \"./Todo\";\r\n\r\nfunction TodoList({ todos, toggleComplete, removeTodo }) {\r\n  return (\r\n    <ul>\r\n      {todos.map((todo) => (\r\n        <Todo\r\n          key={todo.id}\r\n          todo={todo}\r\n          toggleComplete={toggleComplete}\r\n          removeTodo={removeTodo}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default TodoList;\r\n","import React, { useEffect, useState } from \"react\";\nimport TodoForm from \"./componets/TodoForm\";\nimport TodoList from \"./componets/TodoList\";\nfunction App() {\n  const [todos, setTodos] = useState([]);\n  const LOCAL_STORAGE_KEY = \"react-todo-list-todos\";\n  useEffect(() => {\n    const storageTodos = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY));\n    if (storageTodos) {\n      setTodos(storageTodos);\n    }\n  }, []);\n  useEffect(() => {\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(todos));\n  }, [todos]);\n\n  function addTodo(todo) {\n    setTodos([todo, ...todos]);\n  }\n\n  function toggleComplete(id) {\n    setTodos(\n      todos.map((todo) => {\n        if (todo.id === id) {\n          return {\n            ...todo,\n            completed: !todo.completed,\n          };\n        }\n        return todo;\n      })\n    );\n  }\n\n  function removeTodo(id) {\n    setTodos(todos.filter((todo) => todo.id !== id));\n  }\n  return (\n    <div\n      className=\"App\"\n      style={{\n        background: \"ghostwhite\",\n        height: \"1080px\",\n      }}\n    >\n      <header className=\"App-header\">\n        <h2\n          style={{\n            textAlign: \"center\",\n            fontFamily: \"sans-serif\",\n            fontStyle: \"bold\",\n            color: \"crimson\",\n          }}\n        >\n          TODO LIST\n        </h2>\n        <TodoForm addTodo={addTodo} />\n        <TodoList\n          todos={todos}\n          toggleComplete={toggleComplete}\n          removeTodo={removeTodo}\n        />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA\n"],"sourceRoot":""}